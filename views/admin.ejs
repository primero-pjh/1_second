<!DOCTYPE html>
<html>
	<head>
        <meta name="viewport" content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width" />
		<title>탐지로봇 CTR</title>
        <link href="./stylesheets/style.css?ver=1.0" rel="stylesheet" type="text/css" />
        <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900|Material+Icons" rel="stylesheet" 
            type="text/css">
        <link href="https://cdn.jsdelivr.net/npm/quasar@2.11.10/dist/quasar.prod.css" rel="stylesheet" type="text/css">
	</head>
	<body>
        <div id="app">
            <q-layout view="lHh LpR lff"
                container :style="{height: height + 'px'}"
                class="shadow-2 rounded-borders" >
                <q-header reveal class="bg-white text-black shadow-2">
                    <q-toolbar>
                        <q-toolbar-title>
                            <div style="padding-left: 16px;">{{select_label}}</div>
                        </q-toolbar-title>
                        <q-btn icon="person" label="account" flat>
                            <q-menu>
                                <q-list>
                                    <q-item clickable v-close-popup @click="logout">
                                        <q-item-section>로그아웃</q-item-section>
                                    </q-item>
                                </q-list>
                            </q-menu>
                        </q-btn>
                    </q-toolbar>
                </q-header>
    
                <q-drawer v-model="drawerLeft" class="bg-dark text-white" :width="230">
                    <div style="height: 50px; display: flex; align-items: center;">
                        <div class="text-h6" style="padding-left: 18px;">1_SECOND</div>
                    </div>
                    <q-list bordered class="rounded-borders">
                        <template v-for="(row, idx) in lefts">
                            <template v-if="row.childrens.length > 0">
                                <q-expansion-item >
                                    <template v-slot:header>
                                        <q-item-section avatar>
                                            <q-icon :name="row.icon"></q-icon>
                                        </q-item-section>
                                        <q-item-section>
                                            {{row.label}}
                                        </q-item-section>
                                    </template>
                            
                                    <q-card class="bg-dark text-white" style="padding: 0; margin: 0;">
                                        <q-card-section style="padding: 0; padding-left: 20px; margin: 0;">
                                            <q-list bordered class="rounded-borders" style="padding: 0; margin: 0;">
                                                <template v-for="item in row.childrens">
                                                    <q-item clickable @click="clickTab(item)">
                                                        <q-item-section avatar>
                                                            <q-icon :name="item.icon"></q-icon>
                                                        </q-item-section>
                                                        <q-item-section>{{item.label}}</q-item-section>
                                                    </q-item>
                                                </template>
                                            </q-list>
                                        </q-card-section>
                                    </q-card>
                                </q-expansion-item>
                            </template>
                            <template v-else>
                                <q-item clickable v-ripple @click="clickTab(row)">
                                    <q-item-section avatar>
                                        <q-icon  :name="row.icon"></q-icon>
                                    </q-item-section>
                                    <q-item-section>{{row.label}}</q-item-section>
                                </q-item>
                            </template>
                        </template>
                        
                        <q-separator></q-separator>
                    </q-list>
                </q-drawer>
    
                <q-page-container>
                    <q-page class="bg-grey-12 q-pa-sm" :style="{height: ( height - 50 )+'px'}">
                        <q-tab-panels v-model="tab" animated  class="bg-grey-12">
                            <q-tab-panel name="dashboards">
                                <div style="width: 100%;">
                                    <div class="row">
                                        <div class="col-6">
                                            <q-card>
                                                <q-card-section>
                                                    <div class="text-h6">접속 탐지로봇 현황</div>
                                                    <div>
                                                        chart
                                                    </div>
                                                </q-card-section>
                                            </q-card>
                                        </div>
                                        <div class="q-pl-md col-6">
                                            <q-card>
                                                <q-card-section>
                                                    <div>
                                                        <div class="text-h6">접속 탐지로봇 리스트</div>
                                                        <div class="text-grey">
                                                            * 해당 탐지로봇을 클릭하면 아래 상세내용을 볼 수 있습니다. *
                                                        </div>
                                                    </div>
                                                    <q-table class="my-sticky-header-column-table" flat bordered
                                                        :rows="rows"
                                                        :columns="columns"
                                                        row-key="name"
                                                        no-data-label="현재 접속한 탐지로봇이 없습니다."
                                                        @row-click="clickRow"
                                                    >
                                                        <template v-slot:body="props">
                                                            <q-tr :props="props" @click="clickRow(props.row)">
                                                                <q-td key="name" :props="props">
                                                                    <div class="text-bold">{{ props.row.name }}</div>
                                                                </q-td>
                                                                <q-td key="temperature" :props="props">
                                                                    <q-badge color="orange" text-color="white" 
                                                                        :label="props.row.temperature" />
                                                                </q-td>
                                                                <q-td key="humidity" :props="props">
                                                                    {{ props.row.humidity }}
                                                                </q-td>
                                                                <q-td key="latitude" :props="props">
                                                                    {{ props.row.latitude }}
                                                                </q-td>
                                                                <q-td key="longitude" :props="props">
                                                                    {{ props.row.longitude }}
                                                                </q-td>
                                                            </q-tr>
                                                        </template>
                                                    </q-table>
                                                </q-card-section>
                                            </q-card>
                                        </div>
                                    </div>
                                    <div class="row q-mt-md" style="width: 100%;" >
                                        <q-card style="width: 100%;">
                                            <q-card-section>
                                                    <template v-if="select_robot">
                                                        <div>
                                                            <div class="text-h6">{{select_robot.name}}의 상세내역</div>
                                                        </div>
                                                    </template>
                                                    <template v-else>
                                                        <div class="text-h6 text-center">선택된 탐지로봇이 없습니다.</div>
                                                    </template>
                                                </q-card-section>
                                            </q-card>
                                        
                                    </div>
                                </div>
                            </q-tab-panel>
                            <q-tab-panel name="monitoring">
                                <div style="display: flex; flex-wrap: wrap;">
                                    <template v-for="socket in socket_list">
                                        <q-card style="min-width: 270px;" 
                                            class="q-mr-md q-mb-md">
                                            <q-img src="https://cdn.quasar.dev/img/parallax2.jpg">
                                                <div class="absolute-bottom">
                                                    <div class="text-h6">{{socket.id}}</div>
                                                    <div class="text-subtitle2">{{socket.name}}</div>
                                                </div>
                                            </q-img>
                                      
                                            <q-card-actions>
                                                <q-btn flat label="monitoring"></q-btn>
                                                <q-btn flat color="negative" disable
                                                    label="disconnect"></q-btn>
                                            </q-card-actions>
                                        </q-card>
                                    </template>
                                </div>
                            </q-tab-panel>
                            <q-tab-panel name="connect_socket">
                                <div style="display: flex; flex-wrap: wrap;">
                                    <template v-for="socket in socket_list">
                                        <q-card style="min-width: 270px;" 
                                            class="q-mr-md q-mb-md">
                                            <q-img src="https://cdn.quasar.dev/img/parallax2.jpg"></q-img>
                                            <q-card-actions>
                                                <div style="display: flex; justify-content: space-between;
                                                    align-items: center; width: 100%;">
                                                    <div class="text-h6">{{socket.name}}</div>
                                                    <div>
                                                        <q-btn flat color="negative" disable label="disconnect"></q-btn>
                                                    </div>
                                                </div>
                                            </q-card-actions>
                                        </q-card>
                                    </template>
                                </div>
                            </q-tab-panel>
                        </q-tab-panels>
                    </q-page>
                </q-page-container>
            </q-layout>
        </div>
	</body>
</html>
<style>
    .my-sticky-header-column-table {
        height: 310px;
        /* max-width: 600px; */
    }
    .my-sticky-header-column-table thead tr:first-child th:first-child {
        background-color: #eee;
    }
    .my-sticky-header-column-table th:first-child, td:first-child {
        background-color: #eee;
        position: sticky !important;
        left: 0;
        z-index: 1;
    }
    .activeCell {
        background-color: red;
    }
</style>
<script src="/javascripts/common.js"></script>
<script src="https://unpkg.com/vue@3"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.6.0/socket.io.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/quasar@2.11.10/dist/quasar.umd.prod.js"></script>
<script>
    const app = Vue.createApp({
        data() {
            return {
                select_label: '대시보드',
                select_robot: '',
                height: 0,
                socket: null,

                columns: [
                    {
                        name: 'name', required: true, label: '탐지로봇명', align: 'left', field: 'name', sortable: true
                    },
                    { name: 'temperature', align: 'left', label: '온도(temp)', field: 'temperature', sortable: true },
                    { name: 'humidity', align: 'left', label: '습도(hum)', field: 'humidity', sortable: true },
                    { name: 'latitude', align: 'left', label: '위도(lat)', field: 'latitude', sortable: true },
                    { name: 'longitude', align: 'left', label: '경도(long)', field: 'longitude', sortable: true },
                ],
                rows: [
                    {
                        name: 'primero',
                        temperature: 159,
                        humidity: 6.0,
                        latitude: 24,
                        longitude: 4.0,
                    },
                    {
                        name: '탐지로봇2',
                        temperature: 237,
                        humidity: 9.0,
                        latitude: 37,
                        longitude: 4.3,
                        classes: 'activeCell',
                    },
                    {
                        name: '탐지로봇3',
                        temperature: 262,
                        humidity: 16.0,
                        latitude: 23,
                        longitude: 6.0,
                    },
                ],

                tab: 'dashboards',
                drawerLeft: true,
                drawerRight: false,

                lefts: [
                    { icon: 'dashboard', tab: 'dashboards', label: '대시보드', childrens: [] },
                    { icon: 'person', tab: 'user', label: '사용자 관리', childrens: [
                        {icon: 'manage_accounts', tab: 'connect_socket', label: '현재 접속한 유저' },
                        {icon: 'monitor', tab: 'monitoring', label: '모니터링' },
                    ] },
                ],
                
                socket_list: [
                    { id: 1, name: 'first' },
                ],
            }
        },
        methods: {
            clickRow(row) {
                let vm = this;
                this.select_robot = row;
            },
            clickTab(row) { 
                this.tab = row.tab;
                this.select_label = row.label;
            },
            logout() {
                setCookie('token', '');
                window.location.href = '/admin/login';
            },
            /* load */
            loadSocketList() {
                let vm = this;
                vm.socket_list = [];
                vm.socket.emit('/socket/rc', {
                    type: 'rc',
                }, (data, err) => {
                    let row = data.list;
                    console.log("row:", row);
                    vm.socket_list = row;
                });
            },
        },
        mounted() {
            let vm = this;
            vm.height = window.innerHeight;
            window.addEventListener('resize', function(){
                vm.height = window.innerHeight;
            });
            let token = getCookie('token');
            if(!token) { 
                window.location.href = '/admin/login'; 
                return; 
            }

            const socket = io();
            vm.socket = socket;
            vm.loadSocketList();

            setInterval(() => {
                vm.rows[0].temperature++;
            }, 1000);
        },
    }).use(Quasar).mount('#app');
</script>